{"version":3,"sources":["components/ui/NavbarComponent.js","components/ui/SpinnerComponent.js","components/ui/AlertComponent.js","helpers/initialState.js","helpers/getProjects.js","projectContext/ProjectContex.js","components/project/FormComponent.js","hooks/useForm.js","components/project/TimeLineItem.js","components/project/DetailProject.js","components/project/ProjectItem.js","components/project/ProjectsList.js","components/project/ProjectScreen.js","components/ProjectComponent.js","AppComponent.js","index.js"],"names":["NavbarComponent","className","SpinnerComponent","role","AlertComponent","typeAlert","msg","initialState","loading","projectName","projectList","baseUrl","process","getProject","endpoint","data","method","url","console","log","fetch","headers","body","JSON","stringify","processFetch","a","response","json","code","information","proyecto","subproyecto","ProjectContex","createContext","FormComponent","useContext","projectState","setProjectState","useState","values","setValues","target","name","value","useForm","nameP","dateInit","dateFinish","handleInputChangue","resetInputsValues","getFilterFetch","result","onSubmit","e","preventDefault","type","placeholder","onChange","disabled","TimeLineItem","styleDate","style","DetailProject","dateList","applyStyle","estatus","multiply","background","map","item","i","project","key","dateTime","timestamp","split","existDate","includes","push","showSubProject","ProjectItem","ProjectsList","ProjectScreen","ProjectComponent","getProcessFetch","processResponse","useEffect","AppComponent","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.55666d12.chunk.js","sourcesContent":["import React from \"react\";\n\nexport const NavbarComponent = () => {\n  return (\n    <nav className=\"navbar navbar-dark bg-dark\">\n      <div className=\"container-fluid\">\n        <span className=\"navbar-brand mb-0 h1\">Desafio Cadem</span>\n      </div>\n    </nav>\n  )\n}\n","import React from \"react\";\nexport const SpinnerComponent = () => {\n  return (\n    <div className=\"spinner-content\">   \n      <div className=\"hijo spinner-grow text-primary\" role=\"status\">\n        <span className=\"visually-hidden\">Loading...</span>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\n\nexport const AlertComponent = ({ typeAlert, msg }) => {\n  return (\n    <div className={`alert ${typeAlert}`} role=\"alert\">\n      { msg }\n    </div>\n  );\n};\n","export const initialState = {\n  loading: true,\n  msg: \"\",\n  projectName: \"\",\n  projectList: [],\n};\n","import { initialState } from \"./initialState\";\nconst baseUrl = process.env.REACT_APP_API_URL;\n\nexport const getProject = (endpoint = \"\", data = [], method = \"GET\") => {\n  const url = endpoint != \"\" ? `${baseUrl}/${endpoint}` : `${baseUrl}`;\n  console.log(url);\n    if (method == \"GET\") {\n      return fetch(url, { method });\n    } else {\n      return fetch(url, {\n        method,\n        headers: {\n          \"Content-type\": \"application/json\",\n        },\n        body: JSON.stringify(data),\n      });\n    }\n};\n\nexport const processFetch = async (endpoint = '') => {\n  const response = await getProject(endpoint);\n  const body = await response.json();\n  // success response\n  if(body.code != 500){\n    if (body.code == 200) {\n      const { proyecto, subproyecto } = body.information;\n      return {\n        loading: false,\n        msg: '',\n        projectName: proyecto,\n        projectList: [...subproyecto],\n      }\n    } else {\n      return {\n        ...initialState,\n        loading: false,\n        msg: body.msg,\n      }\n    }\n  }else{\n    return {\n      ...initialState,\n      loading: false,\n      msg: body.msg,\n    }\n  }\n};","import { createContext } from 'react';\nexport const ProjectContex = createContext(null);","import React, { useContext } from \"react\";\n// Helpers\nimport { processFetch } from \"../../helpers/getProjects\";\n// Hooks\nimport { useForm } from \"../../hooks/useForm\";\n// Context API\nimport { ProjectContex } from \"../../projectContext/ProjectContex\";\n\nexport const FormComponent = () => {\n  const { projectState, setProjectState } = useContext(ProjectContex);\n  const [values, handleInputChangue, resetInputsValues] = useForm({\n    nameP: \"\",\n    dateInit: \"\",\n    dateFinish: \"\",\n  });\n\n  const { nameP, dateInit, dateFinish } = values;\n  const getFilterFetch = async (endpoint) => {\n    const result = await processFetch(endpoint);\n    setProjectState(result);\n  };\n\n  const handlerSubmit = (e) => {\n    e.preventDefault();\n    let endpoint = null;\n    if (dateInit != \"\" && dateFinish != \"\") {\n      endpoint = `project/${nameP == \"\" ? \"empty\" : nameP}/${dateInit == \"\" ? \"empty\" : dateInit}/${dateFinish == \"\" ? \"empty\" : dateFinish}`;\n    } else {\n      endpoint = \"\";\n    }\n    getFilterFetch(endpoint);\n    resetInputsValues();\n  };\n\n  const { loading } = projectState;\n  return (\n    <form onSubmit={handlerSubmit} className=\"mt-1 d-flex\">\n      <input\n        type=\"search\"\n        className=\"form-control me-2\"\n        placeholder=\"Enter your name project\"\n        name=\"nameP\"\n        value={nameP}\n        onChange={handleInputChangue}\n        disabled={loading}\n      />\n      <input\n        type=\"date\"\n        className=\"form-control me-2\"\n        name=\"dateInit\"\n        value={dateInit}\n        onChange={handleInputChangue}\n        disabled={loading}\n      />\n      <input\n        type=\"date\"\n        className=\"form-control me-2\"\n        name=\"dateFinish\"\n        value={dateFinish}\n        onChange={handleInputChangue}\n        disabled={loading}\n      />\n      <button className=\"btn btn-success\" type=\"submit\" disabled={loading}>\n        Search\n      </button>\n    </form>\n  );\n};\n","import { useState } from 'react'\nexport const useForm = ( initialState = {} ) => {\n    const [values, setValues] = useState(initialState);\n    const resetInputsValues = () => {\n        setValues( initialState );\n    }\n    const handleInputChangue = ({ target }) => {\n        setValues({\n            ...values,\n            [ target.name ]: target.value\n        });\n    } \n    return [ values, handleInputChangue, resetInputsValues ];\n}","import React from \"react\";\nexport const TimeLineItem = ({ styleDate, subproyecto }) => {\n  return (\n    <div\n      className=\"project-item badge rounded-pill\"\n      style={styleDate}\n    >\n      <h4>{subproyecto}</h4>\n    </div>\n  );\n};\n","import React, { useContext } from \"react\";\nimport { TimeLineItem } from \"./TimeLineItem\";\nimport { ProjectContex } from \"../../projectContext/ProjectContex\";\nimport \"../../styles/timeline.css\";\n\nexport const DetailProject = () => {\n  const { projectState } = useContext(ProjectContex);\n  const { projectList } = projectState;\n\n  let dateList = [];\n  const showSubProject = (project, key = 0) => {\n    let dateSubP = project.timestamp;\n    const dateTime = dateSubP.split(\" \", 1);\n    const existDate = dateList.includes(dateTime[0]);\n    let styleDate = null; // objeto con el estilo del elemento\n    if (existDate == false) {\n      dateList.push(dateTime[0]);\n      styleDate = applyStyle(project.estatus);\n    } else {\n      styleDate = applyStyle(project.estatus, 2);\n    }\n    return (\n      <TimeLineItem\n        key={key}\n        subproyecto={project.subproyecto}\n        styleDate={styleDate}\n      />\n    );\n  };\n\n  const applyStyle = (estatus, multiply = 0) => {\n    if (multiply != 0) {\n      return { background: \"yellow\" };\n    }\n    if (estatus == 1) {\n      return { background: \"green\" };\n    }\n    if (estatus == 0) {\n      return { background: \"red\" };\n    }\n  };\n\n  return (\n    <div className=\"container-fluid\">\n      <div className=\"row\">\n        <div className=\"col-lg-12\">\n          <div className=\"timeline-content\">\n            {projectList.map((item, i) => showSubProject(item, i))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nexport const ProjectItem = ({ subproyecto }) => {\n  return <div className=\"subproject\">{subproyecto}</div>;\n};\n","import React, { useContext } from \"react\";\nimport { ProjectContex } from \"../../projectContext/ProjectContex\";\nimport { ProjectItem } from \"./ProjectItem\";\n\nexport const ProjectsList = () => {\n  const { projectState } = useContext(ProjectContex);\n  const { projectName, projectList } = projectState;\n  return (\n    <div className=\"content-project mb-2\">\n      <div className=\"project\">{projectName}</div>\n      {projectList.map((item, i) => (\n        <ProjectItem key={ i } subproyecto={ item.subproyecto } />\n      ))}\n    </div>\n  )\n}\n","import React from \"react\";\nimport { DetailProject } from \"./DetailProject\";\nimport { ProjectsList } from \"./ProjectsList\";\n\nexport const ProjectScreen = () => {\n  return (\n    <div className=\"row\">\n      <div className=\"col-4\">\n        <ProjectsList />\n      </div>\n      <div className=\"col-8\">\n        <DetailProject />\n      </div>\n    </div>\n  );\n};\n","import React, { useContext, useEffect } from \"react\";\n// UI Components\nimport { NavbarComponent } from \"./ui/NavbarComponent\";\nimport { SpinnerComponent } from \"./ui/SpinnerComponent\";\nimport { AlertComponent } from \"./ui/AlertComponent\";\n// Components\nimport { FormComponent } from \"./project/FormComponent\";\nimport { ProjectScreen } from \"./project/ProjectScreen\";\n// Helpers \nimport { processFetch } from \"../helpers/getProjects\";\n// Context API\nimport { ProjectContex } from \"../projectContext/ProjectContex\";\n\nexport const ProjectComponent = () => {\n  const { projectState, setProjectState } = useContext(ProjectContex);\n  const getProcessFetch = async () => {\n    const processResponse = await processFetch();\n    setProjectState(processResponse);\n  }\n\n  useEffect(() => {\n    getProcessFetch();\n  }, []);\n\n  const { loading, msg } = projectState;\n  return (\n    <div>\n      <NavbarComponent />\n      <section className=\"container-fluid\">\n        <FormComponent />\n        <div className=\"card mt-1\">\n          <div className=\"card-body\">\n            { \n              msg != '' && (\n                <AlertComponent \n                  typeAlert=\"alert-danger\"\n                  msg={ msg }   \n                />\n              )\n            }\n            {!loading && msg == '' ? (\n              <ProjectScreen />\n            ) : (\n              <SpinnerComponent />\n            )}\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n};\n","import React, { useState } from 'react'\nimport { ProjectComponent } from './components/ProjectComponent'\nimport { initialState } from './helpers/initialState';\nimport { ProjectContex } from './projectContext/ProjectContex'\n\nexport const AppComponent = () => {\n  const [projectState, setProjectState] = useState(initialState);\n  return (\n    <ProjectContex.Provider value={{ projectState, setProjectState }}>\n      <ProjectComponent/>\n    </ProjectContex.Provider>\n  )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { AppComponent } from './AppComponent';\nimport './styles/index.css';\n\nReactDOM.render(\n  <AppComponent />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}