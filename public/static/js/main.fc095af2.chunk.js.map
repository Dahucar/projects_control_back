{"version":3,"sources":["components/ui/NavbarComponent.js","components/ui/SpinnerComponent.js","components/project/TimeLineItem.js","components/project/DetailProject.js","helpers/getProjects.js","projectContext/ProjectContex.js","components/project/FormComponent.js","hooks/useForm.js","components/project/ProjectItem.js","components/project/ProjectsList.js","helpers/initialState.js","components/ProjectComponent.js","AppComponent.js","index.js"],"names":["NavbarComponent","className","SpinnerComponent","role","TimeLineItem","styleDate","subproyecto","style","DetailProject","projects","dateList","applyStyle","estatus","multiply","background","map","item","i","project","key","dateTime","timestamp","split","existDate","includes","push","showSubProject","baseUrl","process","getProject","endpoint","data","method","url","fetch","headers","body","JSON","stringify","ProjectContex","createContext","FormComponent","useContext","projectState","setProjectState","initialState","useState","values","setValues","target","name","value","useForm","nameP","dateP","handleInputChangue","resetInputsValues","procesFetch","a","response","json","code","information","proyecto","loading","projectName","projectList","msg","onSubmit","e","preventDefault","type","placeholder","onChange","disabled","ProjectItem","ProjectsList","ProjectComponent","processFetch","useEffect","AppComponent","Provider","ReactDOM","render","document","getElementById"],"mappings":"uPAEaA,EAAkB,WAC7B,OACE,qBAAKC,UAAU,6BAAf,SACE,qBAAKA,UAAU,kBAAf,SACE,sBAAMA,UAAU,uBAAhB,gCCLKC,EAAmB,WAC9B,OACE,qBAAKD,UAAU,kBAAf,SACE,qBAAKA,UAAU,iCAAiCE,KAAK,SAArD,SACE,sBAAMF,UAAU,kBAAhB,6BCJKG,G,MAAe,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,UAAWC,EAAkB,EAAlBA,YACxC,OACE,qBACEL,UAAU,kCACVM,MAAOF,EAFT,SAIE,6BAAKC,QCHEE,EAAgB,SAAC,GAAuB,IAAD,IAApBC,gBAAoB,MAAT,GAAS,EAC9CC,EAAW,GAqBTC,EAAa,SAACC,GAA2B,IAAlBC,EAAiB,uDAAN,EACtC,OAAgB,GAAZA,EACK,CAAEC,WAAY,UAER,GAAXF,EACK,CAAEE,WAAY,SAER,GAAXF,EACK,CAAEE,WAAY,YADvB,GAKF,OACE,qBAAKb,UAAU,kBAAf,SACE,qBAAKA,UAAU,MAAf,SACE,qBAAKA,UAAU,YAAf,SACE,qBAAKA,UAAU,OAAf,SACE,sBAAKA,UAAU,YAAf,UACE,oBAAIA,UAAU,kBAAd,iCACA,qBAAKA,UAAU,mBAAf,SACGQ,EAASM,KAAI,SAACC,EAAMC,GAAP,OAxCL,SAACC,GAAsB,IAAbC,EAAY,uDAAN,EAE/BC,EADSF,EAAQG,UACGC,MAAM,IAAK,GAC/BC,EAAYb,EAASc,SAASJ,EAAS,IACzCf,EAAY,KAOhB,OANiB,GAAbkB,GACFb,EAASe,KAAKL,EAAS,IACvBf,EAAYM,EAAWO,EAAQN,UAE/BP,EAAYM,EAAWO,EAAQN,QAAS,GAGxC,cAAC,EAAD,CAEEN,YAAaY,EAAQZ,YACrBD,UAAWA,GAFNc,GA2B8BO,CAAeV,EAAMC,oBC9C1DU,EAAUC,6BAEHC,EAAa,WAAiD,IAA/CC,EAA8C,uDAAnC,GAAIC,EAA+B,uDAAxB,GAAIC,EAAoB,uDAAX,MACrDC,EAAmB,IAAZH,EAAA,UAAsBH,EAAtB,YAAmCG,GAAnC,UAAqDH,EAArD,KACb,MAAa,OAAVK,EACQE,MAAOD,EAAK,CAAED,WAEdE,MAAOD,EAAK,CACfD,SACAG,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAWP,M,OCXrBQ,EAAgBC,wBAAc,MCO9BC,EAAgB,WAAO,IAAD,EACSC,qBAAWH,GAA7CI,EADyB,EACzBA,aAAcC,EADW,EACXA,gBADW,ECPZ,WAA0B,IAAxBC,EAAuB,uDAAR,GAAQ,EAChBC,mBAASD,GADO,mBACrCE,EADqC,KAC7BC,EAD6B,KAW5C,MAAO,CAAED,EANkB,SAAC,GAAgB,IAAdE,EAAa,EAAbA,OAC1BD,EAAU,2BACHD,GADE,kBAEHE,EAAOC,KAAQD,EAAOE,UANN,WACtBH,EAAWH,KDMuCO,CAAQ,CAC9DC,MAAO,GACPC,MAAO,KAJwB,mBAE1BP,EAF0B,KAElBQ,EAFkB,KAEEC,EAFF,KAOzBH,EAAiBN,EAAjBM,MAAOC,EAAUP,EAAVO,MACTG,EAAW,uCAAG,WAAO3B,GAAP,yBAAA4B,EAAA,sEACK7B,EAAWC,GADhB,cACZ6B,EADY,gBAECA,EAASC,OAFV,OAGD,MADXxB,EAFY,QAGTyB,MAAc,EACazB,EAAK0B,YAA/BC,EADY,EACZA,SAAUzD,EADE,EACFA,YACZyC,EAAS,CACbiB,SAAS,EACTC,YAAaF,EACbG,YAAY,YAAK5D,IAEnBsC,EAAgBG,IAEhBH,EAAgB,CAAEoB,SAAS,EAAOG,IAAK/B,EAAK+B,IAAKD,YAAa,KAZ9C,2CAAH,sDA8BTF,EAAYrB,EAAZqB,QACR,OACE,uBAAMI,SAhBc,SAACC,GACrBA,EAAEC,iBACF,IAAIxC,EAAW,KAEbA,EADW,IAATuB,GAAwB,IAATC,EACN,GAEH,kBAAuB,IAATD,EAAc,QAAUA,EAAtC,YACG,IAATC,EAAc,QAAUA,GAG5BG,EAAY3B,GACZ0B,KAK+BvD,UAAU,cAAzC,UACE,uBACEsE,KAAK,SACLtE,UAAU,oBACVuE,YAAY,0BACZtB,KAAK,QACLC,MAAOE,EACPoB,SAAUlB,EACVmB,SAAUV,IAEZ,uBACEO,KAAK,OACLtE,UAAU,oBACViD,KAAK,QACLC,MAAOG,EACPmB,SAAUlB,EACVmB,SAAUV,IAEZ,wBAAQ/D,UAAU,kBAAkBsE,KAAK,SAASG,SAAUV,EAA5D,wBEjEOW,EAAc,SAAC,GAAqB,IAAnBrE,EAAkB,EAAlBA,YAC5B,OAAO,qBAAKL,UAAU,aAAf,SAA6BK,KCEzBsE,EAAe,WAAO,IACzBjC,EAAiBD,qBAAWH,GAA5BI,aACAsB,EAA6BtB,EAA7BsB,YAAaC,EAAgBvB,EAAhBuB,YACrB,OACE,sBAAKjE,UAAU,uBAAf,UACE,qBAAKA,UAAU,UAAf,SAA0BgE,IACzBC,EAAYnD,KAAI,SAACC,EAAMC,GAAP,OACf,cAAC,EAAD,CAAuBX,YAAcU,EAAKV,aAAvBW,UCXd4B,EAAe,CAC1BmB,SAAS,EACTG,IAAK,GACLF,YAAa,GACbC,YAAa,ICUFW,EAAmB,WAAO,IAAD,EACMnC,qBAAWH,GAA7CI,EAD4B,EAC5BA,aAAcC,EADc,EACdA,gBAChBkC,EAAY,uCAAG,oCAAApB,EAAA,sEACI7B,IADJ,cACb8B,EADa,gBAEAA,EAASC,OAFT,OAIF,MAFXxB,EAFa,QAIVyB,MAAc,EACazB,EAAK0B,YAA/BC,EADY,EACZA,SAAUzD,EADE,EACFA,YAClBsC,EAAgB,CACdoB,SAAS,EACTC,YAAaF,EACbG,YAAY,YAAK5D,MAGnBsC,EAAgB,2BACXC,GADU,IAEbmB,SAAS,EACTG,IAAK/B,EAAK+B,OAfK,2CAAH,qDAoBlBY,qBAAU,WACRD,MACC,IAxBiC,IA0B5Bd,EAAyBrB,EAAzBqB,QAASE,EAAgBvB,EAAhBuB,YACjB,OACE,gCACE,cAAC,EAAD,IACA,0BAASjE,UAAU,kBAAnB,UACE,cAAC,EAAD,IACA,qBAAKA,UAAU,YAAf,SACE,qBAAKA,UAAU,YAAf,SACI+D,EAUA,cAAC,EAAD,IATA,sBAAK/D,UAAU,MAAf,UACE,qBAAKA,UAAU,QAAf,SACE,cAAC,EAAD,MAEF,qBAAKA,UAAU,QAAf,SACE,cAAC,EAAD,CAAeQ,SAAUyD,oBCjD9Bc,EAAe,WAAO,IAAD,EACQlC,mBAASD,GADjB,mBACzBF,EADyB,KACXC,EADW,KAEhC,OACE,cAACL,EAAc0C,SAAf,CAAwB9B,MAAO,CAAER,eAAcC,mBAA/C,SACE,cAAC,EAAD,O,MCJNsC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.fc095af2.chunk.js","sourcesContent":["import React from \"react\";\n\nexport const NavbarComponent = () => {\n  return (\n    <nav className=\"navbar navbar-dark bg-dark\">\n      <div className=\"container-fluid\">\n        <span className=\"navbar-brand mb-0 h1\">Desafio Cadem</span>\n      </div>\n    </nav>\n  )\n}\n","import React from \"react\";\nexport const SpinnerComponent = () => {\n  return (\n    <div className=\"spinner-content\">   \n      <div className=\"hijo spinner-grow text-primary\" role=\"status\">\n        <span className=\"visually-hidden\">Loading...</span>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nexport const TimeLineItem = ({ styleDate, subproyecto }) => {\n  return (\n    <div\n      className=\"project-item badge rounded-pill\"\n      style={styleDate}\n    >\n      <h4>{subproyecto}</h4>\n    </div>\n  );\n};\n","import React from \"react\";\nimport \"../../styles/timeline.css\";\nimport { TimeLineItem } from \"./TimeLineItem\";\n\nexport const DetailProject = ({ projects = [] }) => {\n  let dateList = [];\n  const showSubProject = (project, key = 0) => {\n    let dateSubP = project.timestamp;\n    const dateTime = dateSubP.split(\" \", 1);\n    const existDate = dateList.includes(dateTime[0]);\n    let styleDate = null; // objeto con el estilo del elemento\n    if (existDate == false) {\n      dateList.push(dateTime[0]);\n      styleDate = applyStyle(project.estatus);\n    } else {\n      styleDate = applyStyle(project.estatus, 2);\n    }\n    return (\n      <TimeLineItem\n        key={key}\n        subproyecto={project.subproyecto}\n        styleDate={styleDate}\n      />\n    );\n  };\n\n  const applyStyle = (estatus, multiply = 0) => {\n    if (multiply != 0) {\n      return { background: \"yellow\" };\n    }\n    if (estatus == 1) {\n      return { background: \"green\" };\n    }\n    if (estatus == 0) {\n      return { background: \"red\" };\n    }\n  };\n\n  return (\n    <div className=\"container-fluid\">\n      <div className=\"row\">\n        <div className=\"col-lg-12\">\n          <div className=\"card\">\n            <div className=\"card-body\">\n              <h4 className=\"card-title mb-5\">Horizontal Timeline</h4>\n              <div className=\"timeline-content\">\n                {projects.map((item, i) => showSubProject(item, i))}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","const baseUrl = process.env.REACT_APP_API_URL;\n\nexport const getProject = ( endpoint = '', data = [], method = 'GET' ) => {\n    const url =  endpoint != '' ?  `${ baseUrl }/${ endpoint }` : `${ baseUrl }/`;\n    if(method == 'GET'){\n        return fetch( url, { method });\n    }else{\n        return fetch( url, {\n            method,\n            headers: {\n                'Content-type': 'application/json',\n            },\n            body: JSON.stringify( data )\n        });\n    }\n}","import { createContext } from 'react';\nexport const ProjectContex = createContext(null);","import React, { useContext } from \"react\";\n// Helpers\nimport { getProject } from \"../../helpers/getProjects\";\n// Hooks\nimport { useForm } from \"../../hooks/useForm\";\n// Context API\nimport { ProjectContex } from \"../../projectContext/ProjectContex\";\n\nexport const FormComponent = () => {\n  const { projectState, setProjectState } = useContext(ProjectContex);\n  const [values, handleInputChangue, resetInputsValues] = useForm({\n    nameP: \"\",\n    dateP: \"\",\n  });\n\n  const { nameP, dateP } = values;\n  const procesFetch = async (endpoint) => {\n    const response = await getProject(endpoint);\n    const body = await response.json();\n    if (body.code == 200) {\n      const { proyecto, subproyecto } = body.information;\n      const values = {\n        loading: false,\n        projectName: proyecto,\n        projectList: [...subproyecto],\n      };\n      setProjectState(values);\n    } else {\n      setProjectState({ loading: false, msg: body.msg, projectList: [] });\n    }\n  };\n\n  const handlerSubmit = (e) => {\n    e.preventDefault();\n    let endpoint = null;\n    if (nameP == \"\" && dateP == \"\") {\n      endpoint = \"\";\n    } else {\n      endpoint = `project/${nameP == \"\" ? \"empty\" : nameP}/${\n        dateP == \"\" ? \"empty\" : dateP\n      }`;\n    }\n    procesFetch(endpoint);\n    resetInputsValues();\n  };\n\n  const { loading } = projectState;\n  return (\n    <form onSubmit={handlerSubmit} className=\"mt-1 d-flex\">\n      <input\n        type=\"search\"\n        className=\"form-control me-2\"\n        placeholder=\"Enter your name project\"\n        name=\"nameP\"\n        value={nameP}\n        onChange={handleInputChangue}\n        disabled={loading}\n      />\n      <input\n        type=\"date\"\n        className=\"form-control me-2\"\n        name=\"dateP\"\n        value={dateP}\n        onChange={handleInputChangue}\n        disabled={loading}\n      />\n      <button className=\"btn btn-success\" type=\"submit\" disabled={loading}>\n        Search\n      </button>\n    </form>\n  );\n};\n","import { useState } from 'react'\nexport const useForm = ( initialState = {} ) => {\n    const [values, setValues] = useState(initialState);\n    const resetInputsValues = () => {\n        setValues( initialState );\n    }\n    const handleInputChangue = ({ target }) => {\n        setValues({\n            ...values,\n            [ target.name ]: target.value\n        });\n    } \n    return [ values, handleInputChangue, resetInputsValues ];\n}","import React from \"react\";\nexport const ProjectItem = ({ subproyecto }) => {\n  return <div className=\"subproject\">{subproyecto}</div>;\n};\n","import React, { useContext } from \"react\";\nimport { ProjectContex } from \"../../projectContext/ProjectContex\";\nimport { ProjectItem } from \"./ProjectItem\";\n\nexport const ProjectsList = () => {\n  const { projectState } = useContext(ProjectContex);\n  const { projectName, projectList } = projectState;\n  return (\n    <div className=\"content-project mb-2\">\n      <div className=\"project\">{projectName}</div>\n      {projectList.map((item, i) => (\n        <ProjectItem key={ i } subproyecto={ item.subproyecto } />\n      ))}\n    </div>\n  )\n}\n","export const initialState = {\n  loading: true,\n  msg: \"\",\n  projectName: \"\",\n  projectList: [],\n};\n","import React, { useContext, useEffect } from \"react\";\n// UI Components\nimport { NavbarComponent } from \"./ui/NavbarComponent\";\nimport { SpinnerComponent } from \"./ui/SpinnerComponent\";\n// Components\nimport { DetailProject } from \"./project/DetailProject\";\nimport { FormComponent } from \"./project/FormComponent\";\nimport { ProjectsList } from \"./project/ProjectsList\";\n// Helpers \nimport { getProject } from \"../helpers/getProjects\";\nimport { initialState } from \"../helpers/initialState\";\n// Context API\nimport { ProjectContex } from \"../projectContext/ProjectContex\";\n\nexport const ProjectComponent = () => {\n  const { projectState, setProjectState } = useContext(ProjectContex);\n  const processFetch = async () => {\n    const response = await getProject();\n    const body = await response.json();\n    // success response\n    if (body.code == 200) {\n      const { proyecto, subproyecto } = body.information;\n      setProjectState({\n        loading: false,\n        projectName: proyecto,\n        projectList: [...subproyecto],\n      });\n    } else {\n      setProjectState({\n        ...initialState,\n        loading: false,\n        msg: body.msg,\n      });\n    }\n  };\n\n  useEffect(() => {\n    processFetch();\n  }, []);\n\n  const { loading, projectList } = projectState;\n  return (\n    <div>\n      <NavbarComponent />\n      <section className=\"container-fluid\">\n        <FormComponent />\n        <div className=\"card mt-1\">\n          <div className=\"card-body\">\n            {!loading ? (\n              <div className=\"row\">\n                <div className=\"col-4\">\n                  <ProjectsList />\n                </div>\n                <div className=\"col-8\">\n                  <DetailProject projects={projectList} />\n                </div>\n              </div>\n            ) : (\n              <SpinnerComponent />\n            )}\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n};\n","import React, { useState } from 'react'\nimport { ProjectComponent } from './components/ProjectComponent'\nimport { initialState } from './helpers/initialState';\nimport { ProjectContex } from './projectContext/ProjectContex'\n\nexport const AppComponent = () => {\n  const [projectState, setProjectState] = useState(initialState);\n  return (\n    <ProjectContex.Provider value={{ projectState, setProjectState }}>\n      <ProjectComponent/>\n    </ProjectContex.Provider>\n  )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { AppComponent } from './AppComponent';\nimport './styles/index.css';\n\nReactDOM.render(\n  <AppComponent />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}