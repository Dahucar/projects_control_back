{"version":3,"sources":["components/DetailProject.js","helpers/getProjects.js","components/FormComponent.js","hooks/useForm.js","components/NavbarComponent.js","components/ProjectsList.js","components/ui/SpinnerComponent.js","AppComponent.js","index.js"],"names":["initialData","proyecto","subproyecto","estatus","timestamp","DetailProject","projects","dateList","applyStyle","multiply","background","className","map","item","i","project","key","dateTime","split","existDate","includes","styleDate","push","style","showSubProject","baseUrl","process","getProject","endpoint","data","method","url","fetch","headers","body","JSON","stringify","FormComponent","setProject","loading","initialState","useState","values","setValues","target","name","value","useForm","nameP","dateP","handleInputChangue","resetInputsValues","procesFetch","a","response","json","code","information","projectName","projectList","msg","onSubmit","e","preventDefault","type","placeholder","onChange","disabled","NavbarComponent","ProjectsList","SpinnerComponent","role","AppComponent","processFetch","useEffect","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.490026cf.chunk.js","sourcesContent":["import React from \"react\";\nimport '../styles/timeline.css';\n\nconst initialData = {\n  proyecto: '',\n  subproyecto: '',\n  estatus: 0,\n  timestamp: ''\n}\n\nexport const DetailProject = ({ projects = [] }) => {\n  let dateList = [];\n  const showSubProject = ( project = initialData, key = 0 ) => {\n    let dateSubP = project.timestamp;\n    const dateTime = dateSubP.split(' ',1);\n    const existDate = dateList.includes(dateTime[0]);\n    let styleDate = null; // objeto con el estilo del elemento\n    if(existDate == false){\n      dateList.push(dateTime[0]);\n      styleDate = applyStyle(project.estatus);\n    }else{\n      styleDate = applyStyle(project.estatus, 2);\n    }\n    return (\n      <div \n        key={ key } \n        className=\"project-item badge rounded-pill\" \n        style={ styleDate }\n      >\n        <h4>{ project.subproyecto }</h4>\n      </div>\n    )\n  }\n\n  const applyStyle = ( estatus, multiply = 0 ) => {\n    if (multiply != 0) {\n      return { background: 'yellow' }\n    }\n    if (estatus == 1) {\n      return { background: 'green' }\n    }\n    if (estatus == 0) {\n      return { background: 'red' }\n    }\n  }\n\n  // createDateList(projects);\n  return (\n    <div className=\"container-fluid\">\n      <div className=\"row\">\n        <div className=\"col-lg-12\">\n          <div className=\"card\">\n            <div className=\"card-body\">\n              <h4 className=\"card-title mb-5\">Horizontal Timeline</h4>\n              <div className=\"timeline-content\">\n                {\n                  projects.map((item, i) => (\n                    showSubProject( item, i )  \n                  ))\n                }\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}","const baseUrl = process.env.REACT_APP_API_URL;\n\nexport const getProject = ( endpoint = '', data = [], method = 'GET' ) => {\n    const url =  endpoint != '' ?  `${ baseUrl }/${ endpoint }` : `${ baseUrl }/`;\n    if(method == 'GET'){\n        return fetch( url, { method });\n    }else{\n        return fetch( url, {\n            method,\n            headers: {\n                'Content-type': 'application/json',\n            },\n            body: JSON.stringify( data )\n        });\n    }\n}","import React, { useState } from \"react\";\nimport { getProject } from \"../helpers/getProjects\";\nimport { useForm } from \"../hooks/useForm\";\n\nexport const FormComponent = ({ setProject, loading }) => {\n  const [values, handleInputChangue, resetInputsValues] = useForm({\n    nameP: '',\n    dateP: ''\n  });\n\n  const { nameP, dateP } = values;\n  const procesFetch = async ( endpoint ) => {\n    const response = await getProject(endpoint);\n    const body = await response.json();\n    if(body.code == 200){\n      const { proyecto, subproyecto } = body.information;\n      const values = {\n        loading: false,\n        projectName: proyecto,\n        projectList: [ ...subproyecto ]\n      }\n      setProject(values);\n    }else{\n      setProject({loading: false, msg: body.msg, projectList: []});\n    }\n  }\n\n  const handlerSubmit = (e) => {\n    e.preventDefault();\n    let endpoint = null;\n    if (nameP == '' && dateP == '') {\n      endpoint = '';\n    }else{\n      endpoint = `project/${nameP == '' ? 'empty':nameP}/${dateP == '' ? 'empty':dateP}`;\n    }\n    procesFetch( endpoint);\n    resetInputsValues();\n  }\n  \n  return (\n    <form onSubmit={ handlerSubmit } className=\"mt-1 d-flex\">\n      <input\n        type=\"search\"\n        className=\"form-control me-2\"\n        placeholder=\"Enter your name project\"\n        name=\"nameP\"\n        value={ nameP }\n        onChange={ handleInputChangue }\n        disabled={loading}\n      />\n      <input\n        type=\"date\"\n        className=\"form-control me-2\"\n        name=\"dateP\"\n        value={ dateP }\n        onChange={ handleInputChangue }\n        disabled={loading}\n      />\n      <button className=\"btn btn-success\" type=\"submit\" disabled={loading}>\n        Search\n      </button>\n    </form>\n  );\n};\n","import { useState } from 'react'\nexport const useForm = ( initialState = {} ) => {\n    const [values, setValues] = useState(initialState);\n    const resetInputsValues = () => {\n        setValues( initialState );\n    }\n    const handleInputChangue = ({ target }) => {\n        setValues({\n            ...values,\n            [ target.name ]: target.value\n        });\n    } \n    return [ values, handleInputChangue, resetInputsValues ];\n}","import React from \"react\";\n\nexport const NavbarComponent = () => {\n  return (\n    <nav className=\"navbar navbar-dark bg-dark\">\n      <div className=\"container-fluid\">\n        <span className=\"navbar-brand mb-0 h1\">Desafio Cadem</span>\n      </div>\n    </nav>\n  )\n}\n","import React from \"react\";\n\nexport const ProjectsList = ({ projectName, projectList = [] }) => {\n  return (\n    <div className=\"content-project mb-2\">\n      <div className=\"project\">{projectName}</div>\n      {projectList.map((item, i) => (\n        <div key={i} className=\"subproject\">\n          {item.subproyecto}\n        </div>\n      ))}\n    </div>\n  )\n}\n","import React from \"react\";\nexport const SpinnerComponent = () => {\n  return (\n    <div className=\"spinner-content\">   \n      <div className=\"hijo spinner-grow text-primary\" role=\"status\">\n        <span className=\"visually-hidden\">Loading...</span>\n      </div>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { DetailProject } from \"./components/DetailProject\";\nimport { FormComponent } from \"./components/FormComponent\";\nimport { NavbarComponent } from \"./components/NavbarComponent\";\nimport { ProjectsList } from \"./components/ProjectsList\";\nimport { SpinnerComponent } from \"./components/ui/SpinnerComponent\";\nimport { getProject } from \"./helpers/getProjects\";\n\nconst initialState = {\n  loading: true,\n  msg: '',\n  projectName: '',\n  projectList: [],\n}\nexport const AppComponent = () => {\n  const [project, setProject] = useState(initialState);\n  const processFetch = async () => {\n    const response = await getProject();\n    const body = await response.json()\n    // success response\n    if(body.code == 200){\n      const { proyecto, subproyecto } = body.information;\n      setProject({\n        loading: false,\n        projectName: proyecto,\n        projectList: [ ...subproyecto ]\n      });\n    }else{\n      setProject({\n        ...initialState, \n        loading: false,\n        msg: body.msg\n      });\n    }\n  }\n  \n  useEffect(() => {\n    processFetch(); \n  }, [ ]);\n\n  const { loading, projectName, projectList } = project;\n  return (\n    <div>\n      <NavbarComponent />\n      <section className=\"container-fluid\">\n        <FormComponent setProject={setProject} loading={ loading } />\n        <div className=\"card mt-1\">\n          <div className=\"card-body\">\n            {\n              !loading ? (\n                <div className=\"row\">\n                  <div className=\"col-4\">\n                      <ProjectsList \n                        projectName={ projectName }\n                        projectList={ projectList } \n                      />\n                  </div>\n                  <div className=\"col-8\">\n                    <DetailProject projects={ projectList } />\n                  </div>\n                </div>\n              ) :\n              ( <SpinnerComponent /> )\n            }\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { AppComponent } from './AppComponent';\nimport './styles/index.css';\n\nReactDOM.render(\n  <AppComponent />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}