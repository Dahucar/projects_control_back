{"version":3,"sources":["components/ui/NavbarComponent.js","components/ui/SpinnerComponent.js","components/ui/AlertComponent.js","helpers/getProjects.js","helpers/initialState.js","projectContext/ProjectContex.js","components/project/FormComponent.js","hooks/useForm.js","components/project/TimeLineItem.js","components/project/DetailProject.js","components/project/ProjectItem.js","components/project/ProjectsList.js","components/project/ProjectScreen.js","components/ProjectComponent.js","AppComponent.js","index.js"],"names":["NavbarComponent","className","SpinnerComponent","role","AlertComponent","typeAlert","msg","baseUrl","process","getProject","endpoint","data","method","url","fetch","headers","body","JSON","stringify","initialState","loading","projectName","projectList","ProjectContex","createContext","FormComponent","useContext","projectState","setProjectState","useState","values","setValues","target","name","value","useForm","nameP","dateP","handleInputChangue","resetInputsValues","procesFetch","a","response","json","code","information","proyecto","subproyecto","onSubmit","e","preventDefault","type","placeholder","onChange","disabled","TimeLineItem","styleDate","style","DetailProject","dateList","applyStyle","estatus","multiply","background","map","item","i","project","key","dateTime","timestamp","split","existDate","includes","push","showSubProject","ProjectItem","ProjectsList","ProjectScreen","ProjectComponent","processFetch","useEffect","AppComponent","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.113bb85b.chunk.js","sourcesContent":["import React from \"react\";\n\nexport const NavbarComponent = () => {\n  return (\n    <nav className=\"navbar navbar-dark bg-dark\">\n      <div className=\"container-fluid\">\n        <span className=\"navbar-brand mb-0 h1\">Desafio Cadem</span>\n      </div>\n    </nav>\n  )\n}\n","import React from \"react\";\nexport const SpinnerComponent = () => {\n  return (\n    <div className=\"spinner-content\">   \n      <div className=\"hijo spinner-grow text-primary\" role=\"status\">\n        <span className=\"visually-hidden\">Loading...</span>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\n\nexport const AlertComponent = ({ typeAlert, msg }) => {\n  return (\n    <div className={`alert ${typeAlert}`} role=\"alert\">\n      { msg }\n    </div>\n  );\n};\n","const baseUrl = process.env.REACT_APP_API_URL;\n\nexport const getProject = (endpoint = \"\", data = [], method = \"GET\") => {\n  const url = endpoint != \"\" ? `${baseUrl}/${endpoint}` : `${baseUrl}`;\n    if (method == \"GET\") {\n      return fetch(url, { method });\n    } else {\n      return fetch(url, {\n        method,\n        headers: {\n          \"Content-type\": \"application/json\",\n        },\n        body: JSON.stringify(data),\n      });\n    }\n};\n","export const initialState = {\n  loading: true,\n  msg: \"\",\n  projectName: \"\",\n  projectList: [],\n};\n","import { createContext } from 'react';\nexport const ProjectContex = createContext(null);","import React, { useContext } from \"react\";\n// Helpers\nimport { getProject } from \"../../helpers/getProjects\";\nimport { initialState } from '../../helpers/initialState';\n// Hooks\nimport { useForm } from \"../../hooks/useForm\";\n// Context API\nimport { ProjectContex } from \"../../projectContext/ProjectContex\";\n\nexport const FormComponent = () => {\n  const { projectState, setProjectState } = useContext(ProjectContex);\n  const [values, handleInputChangue, resetInputsValues] = useForm({\n    nameP: \"\",\n    dateP: \"\",\n  });\n\n  const { nameP, dateP } = values;\n  const procesFetch = async (endpoint) => {\n    const response = await getProject(endpoint);\n    const body = await response.json();\n    // success response\n    if (body.code != 500) {\n      if (body.code == 200) {\n        const { proyecto, subproyecto } = body.information;\n        setProjectState({\n          loading: false,\n          msg: '',\n          projectName: proyecto,\n          projectList: [...subproyecto],\n        });\n      } else {\n        setProjectState({\n          ...initialState,\n          loading: false,\n          msg: body.msg,\n        });\n      }\n    }else{\n      setProjectState({\n        ...initialState,\n        loading: false,\n        msg: body.msg,\n      });\n    }\n  };\n\n  const handlerSubmit = (e) => {\n    e.preventDefault();\n    let endpoint = null;\n    if (nameP == \"\" && dateP == \"\") {\n      endpoint = \"\";\n    } else {\n      endpoint = `project/${nameP == \"\" ? \"empty\" : nameP}/${\n        dateP == \"\" ? \"empty\" : dateP\n      }`;\n    }\n    procesFetch(endpoint);\n    resetInputsValues();\n  };\n\n  const { loading } = projectState;\n  return (\n    <form onSubmit={handlerSubmit} className=\"mt-1 d-flex\">\n      <input\n        type=\"search\"\n        className=\"form-control me-2\"\n        placeholder=\"Enter your name project\"\n        name=\"nameP\"\n        value={nameP}\n        onChange={handleInputChangue}\n        disabled={loading}\n      />\n      <input\n        type=\"date\"\n        className=\"form-control me-2\"\n        name=\"dateP\"\n        value={dateP}\n        onChange={handleInputChangue}\n        disabled={loading}\n      />\n      <button className=\"btn btn-success\" type=\"submit\" disabled={loading}>\n        Search\n      </button>\n    </form>\n  );\n};\n","import { useState } from 'react'\nexport const useForm = ( initialState = {} ) => {\n    const [values, setValues] = useState(initialState);\n    const resetInputsValues = () => {\n        setValues( initialState );\n    }\n    const handleInputChangue = ({ target }) => {\n        setValues({\n            ...values,\n            [ target.name ]: target.value\n        });\n    } \n    return [ values, handleInputChangue, resetInputsValues ];\n}","import React from \"react\";\nexport const TimeLineItem = ({ styleDate, subproyecto }) => {\n  return (\n    <div\n      className=\"project-item badge rounded-pill\"\n      style={styleDate}\n    >\n      <h4>{subproyecto}</h4>\n    </div>\n  );\n};\n","import React, { useContext } from \"react\";\nimport { TimeLineItem } from \"./TimeLineItem\";\nimport { ProjectContex } from \"../../projectContext/ProjectContex\";\nimport \"../../styles/timeline.css\";\n\nexport const DetailProject = () => {\n  const { projectState } = useContext(ProjectContex);\n  const { projectList } = projectState;\n\n  let dateList = [];\n  const showSubProject = (project, key = 0) => {\n    let dateSubP = project.timestamp;\n    const dateTime = dateSubP.split(\" \", 1);\n    const existDate = dateList.includes(dateTime[0]);\n    let styleDate = null; // objeto con el estilo del elemento\n    if (existDate == false) {\n      dateList.push(dateTime[0]);\n      styleDate = applyStyle(project.estatus);\n    } else {\n      styleDate = applyStyle(project.estatus, 2);\n    }\n    return (\n      <TimeLineItem\n        key={key}\n        subproyecto={project.subproyecto}\n        styleDate={styleDate}\n      />\n    );\n  };\n\n  const applyStyle = (estatus, multiply = 0) => {\n    if (multiply != 0) {\n      return { background: \"yellow\" };\n    }\n    if (estatus == 1) {\n      return { background: \"green\" };\n    }\n    if (estatus == 0) {\n      return { background: \"red\" };\n    }\n  };\n\n  return (\n    <div className=\"container-fluid\">\n      <div className=\"row\">\n        <div className=\"col-lg-12\">\n          <div className=\"timeline-content\">\n            {projectList.map((item, i) => showSubProject(item, i))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nexport const ProjectItem = ({ subproyecto }) => {\n  return <div className=\"subproject\">{subproyecto}</div>;\n};\n","import React, { useContext } from \"react\";\nimport { ProjectContex } from \"../../projectContext/ProjectContex\";\nimport { ProjectItem } from \"./ProjectItem\";\n\nexport const ProjectsList = () => {\n  const { projectState } = useContext(ProjectContex);\n  const { projectName, projectList } = projectState;\n  return (\n    <div className=\"content-project mb-2\">\n      <div className=\"project\">{projectName}</div>\n      {projectList.map((item, i) => (\n        <ProjectItem key={ i } subproyecto={ item.subproyecto } />\n      ))}\n    </div>\n  )\n}\n","import React from \"react\";\nimport { DetailProject } from \"./DetailProject\";\nimport { ProjectsList } from \"./ProjectsList\";\n\nexport const ProjectScreen = () => {\n  return (\n    <div className=\"row\">\n      <div className=\"col-4\">\n        <ProjectsList />\n      </div>\n      <div className=\"col-8\">\n        <DetailProject />\n      </div>\n    </div>\n  );\n};\n","import React, { useContext, useEffect } from \"react\";\n// UI Components\nimport { NavbarComponent } from \"./ui/NavbarComponent\";\nimport { SpinnerComponent } from \"./ui/SpinnerComponent\";\nimport { AlertComponent } from \"./ui/AlertComponent\";\n// Components\nimport { FormComponent } from \"./project/FormComponent\";\nimport { ProjectScreen } from \"./project/ProjectScreen\";\n// Helpers \nimport { getProject } from \"../helpers/getProjects\";\nimport { initialState } from \"../helpers/initialState\";\n// Context API\nimport { ProjectContex } from \"../projectContext/ProjectContex\";\n\nexport const ProjectComponent = () => {\n  const { projectState, setProjectState } = useContext(ProjectContex);\n  const processFetch = async () => {\n    const response = await getProject();\n    const body = await response.json();\n    // success response\n    if(body.code != 500){\n      if (body.code == 200) {\n        const { proyecto, subproyecto } = body.information;\n        setProjectState({\n          loading: false,\n          msg: '',\n          projectName: proyecto,\n          projectList: [...subproyecto],\n        });\n      } else {\n        setProjectState({\n          ...initialState,\n          loading: false,\n          msg: body.msg,\n        });\n      }\n    }else{\n      setProjectState({\n        ...initialState,\n        loading: false,\n        msg: body.msg,\n      });\n    }\n  };\n\n  useEffect(() => {\n    processFetch();\n  }, []);\n\n  const { loading, msg } = projectState;\n  return (\n    <div>\n      <NavbarComponent />\n      <section className=\"container-fluid\">\n        <FormComponent />\n        <div className=\"card mt-1\">\n          <div className=\"card-body\">\n            { \n              msg != '' && (\n                <AlertComponent \n                  typeAlert=\"alert-danger\"\n                  msg={ msg }   \n                />\n              )\n            }\n            {!loading && msg == '' ? (\n              <ProjectScreen />\n            ) : (\n              <SpinnerComponent />\n            )}\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n};\n","import React, { useState } from 'react'\nimport { ProjectComponent } from './components/ProjectComponent'\nimport { initialState } from './helpers/initialState';\nimport { ProjectContex } from './projectContext/ProjectContex'\n\nexport const AppComponent = () => {\n  const [projectState, setProjectState] = useState(initialState);\n  return (\n    <ProjectContex.Provider value={{ projectState, setProjectState }}>\n      <ProjectComponent/>\n    </ProjectContex.Provider>\n  )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { AppComponent } from './AppComponent';\nimport './styles/index.css';\n\nReactDOM.render(\n  <AppComponent />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}